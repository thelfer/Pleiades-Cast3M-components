*======================================================================*
*         MODELE HYPERELASTIQUE MOONEY RIVLIN QUASI-INCOMPRESSIBLE     *
*                  EN GRANDES TRANSFORMATIONS                          *
*                                                                      *
*   TEST DE VALIDATION DU MODELE : TRACTION (3D) SIMPLE SELON AXE Z    *
*   COMPARAISON AVEC LA SOLUTION ANALYTIQUE INCOMPRESSIBLE             *
*                                                                      *
*   Contribution de Laurent Gornet - Ecole Centrale de Nantes (2008)   *
*======================================================================*
*  Pour plus d'informations, voir la presentation de L. Gornet lors    *
*  du Club Cast3m 2006, disponible sur le site Web de Cast3m.          *
*======================================================================*
*  Exemple d'utilisation d'un modele UMAT en grandes transformations   *
*======================================================================*

*=======================================================================
*
*                       PROCEDURES DEPENDANTES
*
*=======================================================================

DEBPROC EVO2FICH EV1*EVOLUTION FICOUT*MOT;
  PROG1=EXTR EV1 ABSC;
  PROG2=EXTR EV1 ORDO;
  NB=DIME PROG1;
  I=0;
  ii=vale impr;
  OPTI IMPR 10 IMPR FICOUT;
  REPETER BOU1 NB;
    I=I+1;
    X1=EXTR PROG1 I;
    Y1=EXTR PROG2 I;
    MESSAGE X1 Y1 ;
    FIN BOU1;
  OPTI IMPR II;
FINPROC;

*=======================================================================
*
*                      JEU DE DONNEES PRINCIPAL
*
*=======================================================================

'OPTION' 'DIME' 3 'MODELISER' 'TRID' 'ECHO' 0;
'OPTION' 'EPSILON' 'UTILISATEUR';
'OPTION' 'ERREUR'  'FATAL';
* Mettre VRAI si l'on souhaite divers traces.
GRAPH = FAUX ;
* Mettre 1 ou 2 selon le type de calcul voulu
ICALCUL = 1 ;
*
'SI' ('>' ICALCUL 2) ;
  'MESS' 'ICALCUL doit valoir 1 ou 2' ;
  'ERREUR' 5 ;
'FINSI' ;

title = 'CHAINE' 'MOONEY RIVLIN - ' 'TRACTION UNIAXIALE Z' ;

*======================================================================*
*             Geometrie - Maillage                                     *
*======================================================================*
* Longueur (direction x) du pave :
Lg_x = 1. ;
* Largeur (direction y) du pave :
Lg_y = 1. ;
* Hauteur (direction z) du pave :
Lg_z = 1. ;
* Nombre d'elements selon les directions x, y et z :
'SI' ('EGA' ICALCUL 1) ;
  Nel_x = 2 ;
  Nel_y = 2 ;
  Nel_z = 2 ;
  'OPTION' 'ELEM' 'CUB8' ;
'FINSI' ;
'SI' ('EGA' ICALCUL 2) ;
  Nel_x = 3 ;
  Nel_y = 3 ;
  Nel_z = 7 ;
  'OPTION' 'ELEM' 'CU20' ;
'FINSI' ;
*
P1 =  0.    0. 0. ;
P2 = Lg_x   0. 0. ;
P3 = Lg_x Lg_y 0. ;
P4 =  0.  Lg_y 0. ;
*
L1 = 'DROITE' Nel_x P1 P2 ;
L2 = 'DROITE' Nel_y P2 P3 ;
L3 = 'DROITE' Nel_x P3 P4 ;
L4 = 'DROITE' Nel_y P4 P1 ;
*
SBas = 'DALLER' L1 L2 L3 L4 ;
Pave = 'VOLUME' SBas 'TRANS' Nel_z (0. 0. Lg_z) ;
Shau = 'FACE' 2 Pave 'COULEUR' 'BLEU' ;
'SI' GRAPH ;
  'TRACER' Pave 'TITRE' ('CHAINE' title ' - MAILLAGE') 'CACH' ;
'FINSI' ;

*======================================================================*
*             Modele - Materiau - Caracteristiques (en MPa)            *
*======================================================================*
* Ne pas oublier de definir les parametres lies a l'elasticite.
* Meme si ce n'est pas utilise dans le modele, cela est utile pour
* l'operateur de convergence mecanique de INCREPL-INCREME.
*

coel2D = 'MOTS' 'YOUN' 'NU' 'RHO' 'ALPH' 'D   ' 'C1  ' 'C2  ';
MO = MODE Pave 'MECANIQUE' 'ELASTIQUE' 'ISOTROPE'
       'NON_LINEAIRE' 'UTILISATEUR'
       'LIB_LOI' 'src/libUmatBehaviour.so'
       'FCT_LOI' 'umatincompressiblemooneyrivlinbehaviour'
       'C_MATERIAU' coel2D ;
*
* Coefficients du modele de Mooney-Rivlin (en MPa) :
CoeC1 = 0.183  ;     CoeC2 = 0.0034   ;
* CoeC1 = 1. MPa  et  CoeD = 1.E-4 MPa**-1  !
* Lorsque CoeD tend vers 0, on retrouve un modele de type Mooney-Rivlin
* incompressible. Ici on met une valeur "petite" de CoeD pour pouvoir
* utiliser la solution analytique du modele de Mooney-Rivlin correspon-
* dant pour les tests de comparaison. Si CoeD a une valeur trop "impor-
* tante", il faut modifier la valeur du coefficient de Poisson, qui
* s'eloigne alors de 0.5 (incompressibilite).
* On fixe le coefficient de Poisson ("proche" de 0.5 si D est "petit").
* Le module de Young initial est alors connu :
* (le module de cisaillement vaut pour ce modele : mu = 2.CoeC1)
* La valeur du module de Young utilise pour les estimations elastiques
* doit etre superieure au module tangent pour le niveau de deformation
* atteint en fin de calcul (sinon risque de non convergence).

*XNU = 0.499 ;
YOUini = 3.*(2.*(CoeC1+CoeC2)) ;
*
'SI' ('EGA' ICALCUL 1) ;
  XNU = 0.497 ;
  CoeD  = 1.E-4   ;
  YOU = 100. * YOUini ;
'FINSI' ;
'SI' ('EGA' ICALCUL 2) ;
  XNU = 0.495 ;
  CoeD  = 1.E-2   ;
  YOU = 200. * YOUini ;
'FINSI' ;
*
MA = 'MATERIAU' MO  'YOUN' YOU    'NU  ' XNU 'RHO ' 0.  'ALPH' 0.
                     'D   ' CoeD  'C1  ' CoeC1  'C2  ' CoeC2 ;

*==================================================================*
*                      Conditions aux limites                      *
*==================================================================*
BL1 = 'BLOQUER' 'UZ  ' Shau ;
BL2 = 'BLOQUER' 'UZ  ' Sbas ;
BL3 = 'BLOQUER' 'UX  ' L4 ;
BL4 = 'BLOQUER' 'UY  ' L1 ;
BLTOT = BL1 'ET' BL2 'ET' BL3 'ET' BL4 ;
*
* Definition des instants du chargement :
t_deb = 0. ;   t_fin = 10. ;
L_tps = 'PROG' t_deb t_fin ;
* Deplacement suivant Z :
L_UZ = 'PROG' 0. (3.0 * Lg_z) ;
FF_z = 'DEPIMP' BL1 1. ;
EV_z = 'EVOL' 'MANU' 'TEMPS' L_tps  'LAMZ' L_UZ ;
CHARTOT = 'CHARGEMENT' 'DIMP' FF_z EV_z ;

*======================================================================*
*             Initialisation de la table pour appel a INCREPL          *
*======================================================================*
TAB1 = 'TABLE' ;
TAB1.'MODELE' = MO ;
TAB1.'MATERIAUX' = MA ;
TAB1.'BLOCAGES_MECANIQUES' = BLTOT ;
TAB1.'CHARGEMENT' = CHARTOT ;
TAB1.'GRANDS_DEPLACEMENTS' = VRAI ;
TAB1.'MESSAGES' = VRAI ;
TAB1 . 'INCREPL_VERSION' = 4;

TABU = 'TABLE';
TABU . 'TEMPS' = 'TABLE';
TABU . 'DEPLACEMENTS' = 'TABLE';
TABU . 'CONTRAINTES'  = 'TABLE';

L_temps = 'PROG' t_deb 'PAS' 0.1 t_fin  ;
n_temps = 'DIMENSION' L_temps ;

TABU . 'TEMPS'        . 0 = 'EXTR' L_temps 1 ;
TABU . 'DEPLACEMENTS' . 0 = 'ZERO' mo 'DEPLACEM' ;
TABU . 'CONTRAINTES'  . 0 = 'ZERO' mo 'CONTRAIN' ;

te  = 'EXTR' L_temps ('DIME' L_temps);
'REPE' I (('DIME' L_temps) '-' 1);
   t   = 'EXTR' L_temps &i;
   tdt = 'EXTR' L_temps (&i '+' 1);
   dt = tdt '-' t;
  'MESSAGE' 'time: from ' t ' to ' te;
  TAB1. 'TEMPS_INI'   = t;
  'SI' ('>' (t+dt) te);
    TAB1 . 'TEMPS_FIN' = te ;
  'SINO' ;
    TAB1 . 'TEMPS_FIN' = t+dt ;
  'FINSI';
  STAB1 = INCREPL TAB1 ;
  bconv = FAUX;
  'SI' ('EXISTE' stab1 'CONV_MECA');
    bconv = stab1.'CONV_MECA';
  'FINSI' ;
  'SI' ('EXISTE'  stab1 '_ERREUR_');
       bCONV = bCONV 'ET' ('EGA' (STAB1. '_ERREUR_') 0);
  'FINSI' ;
  'SI' bCONV ;
    TABU . 'TEMPS'        . &I = t '+' dt;
    TABU . 'DEPLACEMENTS' . &I = STAB1 . 'U_FIN';
    TABU . 'CONTRAINTES'  . &I = STAB1 . 'SIGMA_FIN';
    t = t+dt;
    'SI'('>' t te);
      t = te;
    'FINSI' ;
  'SINON';
      'ERREUR'  'NON CONVERGENCE';  
  'FINSI' ;
*                                                                     *
'FIN' I ;

*
* Quelques traces de controle apres calculs
'LISTE' TABU.'DEPLACEMENTS';
'SI' GRAPH ;
  Defo_0 = 'DEFORMEE' Pave (TABU.'DEPLACEMENTS'.(n_temps-1)) 0. ;
  Defo_1 = 'DEFORMEE' Pave (TABU.'DEPLACEMENTS'.(n_temps-1)) 1. 'VERT' ;
  'TRACER' (Defo_0 'ET' Defo_1)
           'TITRE' ('CHAINE' title ' - DEFORMEES INITIALE ET FINALE') ;
  'TRACER' MO (TABU.'CONTRAINTES'.(n_temps-1))
           'TITRE' ('CHAINE' title ' - CONTRAINTES EN FIN DE CALCUL') ;
'FINSI' ;
*
*======================================================================*
*             Construction de la solution analytique INCOMPRESSIBLE    *
*======================================================================*
* Definitions :
* - Allongement selon direction y : Lamy = 1 + (UY/Lg_y)
* - Densite d'energie de deformation hyperelastique : W(I1,I2)
* - I1, I2 : trois invariants du tenseur de Cauchy-Green droit
* Dans le cas du modele Neo-Hookeen :
*   W = CoeC1*(I1-3.) , soit dW/dI1 = CoeC1 et dW/dI2 = 0.
*
* Les contraintes de Cauchy sont calculables analytiquement :
* - SCxx = 0.
* - SCyy = 2.(Lamy**2 - 1./Lamy).(dW/dI1 + 1./Lamy.dW/dI2)
* - SCxy = 0  (pas de cisaillement)
* - SCzz = 0  (hypothese des contraintes planes)
*
L_Un  = 'PROG' n_temps '*' 1. ;
Lamz  = L_Un + (('IPOL' L_temps L_tps L_UZ) / Lg_z) ;
*
SCxx_th = 0. * L_Un ;
SCyy_th = 0. * L_Un ;
L_z1 = Lamz * Lamz ;  L_z2 = L_Un / Lamz ;
SCzz_th = (L_z1 - L_z2) * ((2.*CoeC1*L_Un) + (2.*CoeC2*L_z2)) ;
SCxy_th = 0. * L_Un ;
SCxz_th = 0. * L_Un ;
SCyz_th = 0. * L_Un ;
*
*======================================================================*
*             Comparaison des resultats avec la solution analytique    *
*======================================================================*
* La comparaison s'effectue entre les valeurs moyennes des contraintes
* calculees et les solutions analytiques correspondantes.
* On ne cherche pas a verifier l'uniformite du champ de contraintes.
* (Faire le calcul en mettant GRAPH a VRAI et voir les isovaleurs !)
*
TabD = TABU.'DEPLACEMENTS' ;
TabS = TABU.'CONTRAINTES' ;
Confini = 'FORM' ;
ChmUn = 'MANU' 'CHML' MO 'SCAL' 1. ;
*
SCxx = 'PROG' 0. ;
SCyy = 'PROG' 0. ;
SCzz = 'PROG' 0. ;
SCxy = 'PROG' 0. ;
SCxz = 'PROG' 0. ;
SCyz = 'PROG' 0. ;
'REPETER' Boucle (n_temps - 1) ;
  'FORM' (TabD.&Boucle) ;
  VolSU = 'INTG' MO ChmUn ;
  mess ' volsu '  volsu;
  SCxx = SCxx 'ET' ('PROG' (('INTG' MO (TabS. &Boucle) 'SMXX')/VolSU)) ;
  SCyy = SCyy 'ET' ('PROG' (('INTG' MO (TabS. &Boucle) 'SMYY')/VolSU)) ;
  SCzz = SCzz 'ET' ('PROG' (('INTG' MO (TabS. &Boucle) 'SMZZ')/VolSU)) ;
  SCxy = SCxy 'ET' ('PROG' (('INTG' MO (TabS. &Boucle) 'SMXY')/VolSU)) ;
  SCxz = SCxz 'ET' ('PROG' (('INTG' MO (TabS. &Boucle) 'SMXZ')/VolSU)) ;
  SCyz = SCyz 'ET' ('PROG' (('INTG' MO (TabS. &Boucle) 'SMYZ')/VolSU)) ;
  'FORM' Confini ;
'FIN' Boucle ;
*
*  LG lamb
L_temps = Lamz;
*
'SI' GRAPH ;
  tlege = 'TABLE' ;
  tlege. 1 = 'MARQ CROI' ;
  tlege.'TITRE' = 'TABLE' ;
  tlege.'TITRE'. 1 = 'Numerique' ;
  tlege.'TITRE'. 2 = 'Analytique' ;
  Evxx    = 'EVOL' 'ROUG' 'MANU' 'LAMB' L_temps 'SCXX' SCxx ;
  Evxx_th = 'EVOL' 'BLEU' 'MANU' 'LAMB' L_temps 'SCXX' SCxx_th ;
  'DESSIN' (Evxx 'ET' Evxx_th) 'LEGE' tlege
           'TITRE' ('CHAINE' title ' - CONTRAINTE DE CAUCHY XX (Pa)') ;
  Evyy    = 'EVOL' 'ROUG' 'MANU' 'LAMB' L_temps 'SCYY' SCyy ;
  Evyy_th = 'EVOL' 'BLEU' 'MANU' 'LAMB' L_temps 'SCYY' SCyy_th ;
  'DESSIN' (Evyy 'ET' Evyy_th) 'LEGE' tlege
           'TITRE' ('CHAINE' title ' - CONTRAINTE DE CAUCHY YY (Pa)') ;
  Evzz    = 'EVOL' 'ROUG' 'MANU' 'LAMB' L_temps 'SCZZ' SCzz ;
  Evzz_th = 'EVOL' 'BLEU' 'MANU' 'LAMB' L_temps 'SCZZ' SCzz_th ;
  'DESSIN' (Evzz 'ET' Evzz_th) 'LEGE' tlege
           'TITRE' ('CHAINE' title ' - CONTRAINTE DE CAUCHY ZZ (Pa)') ;
  Evxy    = 'EVOL' 'ROUG' 'MANU' 'LAMB' L_temps 'SCXY' SCxy ;
  Evxy_th = 'EVOL' 'BLEU' 'MANU' 'LAMB' L_temps 'SCXY' SCxy_th ;
  'DESSIN' (Evxy 'ET' Evxy_th) 'LEGE' tlege
           'TITRE' ('CHAINE' title ' - CONTRAINTE DE CAUCHY XY (Pa)');
  Evxz    = 'EVOL' 'ROUG' 'MANU' 'LAMB' L_temps 'SCXZ' SCxz ;
  Evxz_th = 'EVOL' 'BLEU' 'MANU' 'LAMB' L_temps 'SCXZ' SCxz_th ;
  'DESSIN' (Evxz 'ET' Evxz_th) 'LEGE' tlege
           'TITRE' ('CHAINE' title ' - CONTRAINTE DE CAUCHY XY (Pa)');
  Evyz    = 'EVOL' 'ROUG' 'MANU' 'LAMB' L_temps 'SCYZ' SCyz ;
  Evyz_th = 'EVOL' 'BLEU' 'MANU' 'LAMB' L_temps 'SCYZ' SCyz_th ;
  'DESSIN' (Evyz 'ET' Evyz_th) 'LEGE' tlege
           'TITRE' ('CHAINE' title ' - CONTRAINTE DE CAUCHY XY (Pa)');
'FINSI' ;
*
* Tests de bon fonctionnement :
Smaxref = 'MAXIMUM' ('ABS' SCzz_th) ;
r_xx = 'MAXIMUM' ('ABS' (SCxx - SCxx_th)) / Smaxref ;
r_yy = 'MAXIMUM' ('ABS' (SCyy - SCyy_th)) / Smaxref ;
r_zz = 'MAXIMUM' ('ABS' (SCzz - SCzz_th)) / Smaxref ;
uu= ('ABS' (SCzz - SCzz_th)) / Smaxref;
list sczz; list SCzz_th;  list uu;
r_xy = 'MAXIMUM' ('ABS' (SCxy - SCxy_th)) / Smaxref ;
r_xz = 'MAXIMUM' ('ABS' (SCxz - SCxz_th)) / Smaxref ;
r_yz = 'MAXIMUM' ('ABS' (SCyz - SCyz_th)) / Smaxref ;
*
MESS ' RESULTATS : ' title ;
MESS ' ------------------------------------------------- ';
'SAUTER' 1 'LIGNE' ;
'MESS' '  Tests de bon fonctionnement :' ;
'MESS' ' -------------------------------' ;
'MESS' ' Comparaison effectuee sur les contraintes de Cauchy' ;
'MESS' ' Ecart relatif maximal entre la valeur moyenne calculee' ;
'MESS' '                          et la solution analytique' ;
'MESS' ' Composante XX : ' r_xx ;
'MESS' ' Composante YY : ' r_yy ;
'MESS' ' Composante ZZ : ' r_zz ;
'MESS' ' Composante XY : ' r_xy ;
'MESS' ' Composante XZ : ' r_xz ;
'MESS' ' Composante YZ : ' r_yz ;
'SAUTER' 1 'LIGNE' ;
* Ecart relatif maximal tolere
'SI' ('EGA' ICALCUL 1) ;
  Sigref = 1.E-3 ;
'FINSI' ;
'SI' ('EGA' ICALCUL 2) ;
  Sigref = 1.E-2 ;
'FINSI' ;
*
L_z = 'PROG' r_xx r_yy r_zz r_xy r_xz r_yz ;
'SI' ('>EG' ('MAXIMUM' L_z) Sigref) ;
  'MESS' ' ---------------------' ;
  'MESS' '  ECHEC DU CAS-TEST !' ;
  'MESS' ' ---------------------' ;
  'ERREUR' 5 ;
'SINON' ;
  'MESS' ' ----------------------' ;
  'MESS' '  SUCCES DU CAS-TEST !' ;
  'MESS' ' ----------------------' ;
'FINSI' ;
'SAUTER' 1 'LIGNE' ;

pt = 'PROG';
ps = 'PROG';
'REPETER' i ('DIMENSION' (tabu. 'CONTRAINTES'));
  pt = pt 'ET' ('PROG' (tabu. 'TEMPS'. (&i '-' 1)));
  s  = TABU. 'CONTRAINTES'. (&i - 1);
  ps = ps 'ET' ('MAXIMUM' ('EXCO' s 'SMZZ'));
'FIN'  i;

EVO2FICH ('EVOL' 'MANUEL' pt ps)
      'IncompressibleMooneyRivlinUniaxialTesting-castem.res';

'FIN' ;
